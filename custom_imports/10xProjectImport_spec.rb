# Generated by Selenium IDE
require 'selenium-webdriver'
require 'json'
describe '10xProjectImport' do
  before(:each) do
    @driver = Selenium::WebDriver.for :chrome
    @vars = {}
  end
  after(:each) do
    @driver.quit
  end
  it '10xProjectImport' do
    @driver.get('http://ec2-52-87-156-42.compute-1.amazonaws.com:3000/')
    @driver.find_element(:css, '.icon-reorder').click
    @driver.find_element(:link_text, 'Administration').click
    @driver.find_element(:css, '.imports > li:nth-child(3) .dashboard-item-label').click
    @driver.find_element(:xpath, '//a[contains(@href, \'/easy_entity_imports/13\')]').click
    @driver.find_element(:name, 'attachments[dummy][file]').click
    @driver.find_element(:name, 'attachments[dummy][file]').send_keys('/home/dayalan/Downloads/PSA 10.x imports - Projects (10).csv')
    @driver.find_element(:name, 'button').click
    @driver.find_element(:css, '.icon-magnifier:nth-child(1)').click
    element = @driver.find_element(:css, '.import-button')
    @driver.action.move_to_element(element).perform
    dropdown = @driver.find_element(:id, 'easy_entity_import_merge_by')
    dropdown.find_element(:xpath, "//option[. = 'ID']").click
    dragged = @driver.find_element(:css, 'big[data-name=id]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_easy_external_id_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=id]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_id_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=name]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_name_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=description]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_description_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=Active]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_status_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=est_end_date]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_easy_due_date_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=startdate]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_easy_start_date_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=\'ERM customer_id\']')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_client_id_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=startdate]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_start_date_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=est_end_date]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_due_date_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=project_stage_name]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_37_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=budget_time]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_38_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=Project_Billing_Type]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_20_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=Project_Type]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_19_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=Active]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_39_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=PMO]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_40_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=\'ERM BU ID\']')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_41_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=Budgeted_Cost]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_42_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=\'Budgeted By\']')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_43_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=Budgeted_Cost]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_44_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=\'Onshore Allocation %\']')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_46_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
    dragged = @driver.find_element(:css, 'big[data-name=PMO]')
    dropped = @driver.find_element(:css, 'input[id=easy_entity_import_attribute_cf_47_value]')
    @driver.action.drag_and_drop(dragged, dropped).perform
  end
end
